name: backend ci

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  test:
    name: testing and linting python code
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Formatting with Black
      run: |
        black . --check 
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore F403,F405
    - name: Test with pytest
      run: |
        pytest -v

  build:

    name: build and push to docker
    runs-on: ubuntu-22.04
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: backend
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:backend"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:v${{ github.run_number }}

    